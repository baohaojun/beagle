From: Daniel Drake <dsd@gentoo.org>

When lock obtain times out, do a little bit of automatic investigation into
the possibly-stale lockfile.

Index: Store/Lock.cs
===================================================================
RCS file: /cvs/gnome/beagle/beagled/Lucene.Net/Store/Lock.cs,v
retrieving revision 1.6.4.11
diff -u -3 -p -r1.6.4.11 Lock.cs
--- Store/Lock.cs	30 Sep 2006 02:44:49 -0000	1.6.4.11
+++ Store/Lock.cs	30 Sep 2006 02:47:16 -0000
@@ -58,17 +58,38 @@ namespace Lucene.Net.Store
 		/// <throws>  IOException if lock wait times out or obtain() throws an IOException </throws>
 		public virtual bool Obtain(long lockWaitTimeout)
 		{
-			bool locked = Obtain();
 			int maxSleepCount = (int) (lockWaitTimeout / LOCK_POLL_INTERVAL);
 			int sleepCount = 0;
 			maxSleepCount = System.Math.Max (maxSleepCount, 1);
+			FSDirectory.Log ("Lock.Obtain timeout={0} maxsleepcount={1}", lockWaitTimeout, maxSleepCount);
+			bool locked = Obtain();
 
 			while (!locked)
 			{
 				if (sleepCount++ == maxSleepCount)
 				{
-					throw new System.IO.IOException("Lock obtain timed out: " + this.ToString());
-				}
+					// Try and be a little more verbose on failure
+					string lockpath = this.ToString ();
+					System.Text.StringBuilder ex = new System.Text.StringBuilder();
+					ex.Append ("Lock obain timed out: ");
+					ex.Append (lockpath);
+					if (System.IO.File.Exists (lockpath)) {
+						System.IO.FileStream fs = System.IO.File.Open (lockpath, System.IO.FileMode.Open, System.IO.FileAccess.Read, System.IO.FileShare.Read);
+						System.IO.StreamReader sr = new System.IO.StreamReader (fs);
+						string pid = sr.ReadToEnd ().Trim ();
+						sr.Close ();
+						fs.Close ();
+						ex.Append (" -- pid ").Append (pid);
+
+						if (System.IO.Directory.Exists ("/proc/" + pid))
+							ex.Append (" -- process exists");
+						else
+							ex.Append (" -- process does not exist, stale lockfile?");
+					} else {
+						ex.Append (" -- lock file doesn't exist!?");
+					}
+					throw new System.IO.IOException(ex.ToString ());
+ 				}
 				System.Threading.Thread.Sleep((int) LOCK_POLL_INTERVAL);
 				locked = Obtain();
 			}
Index: Store/FSDirectory.cs
===================================================================
RCS file: /cvs/gnome/beagle/beagled/Lucene.Net/Store/FSDirectory.cs,v
retrieving revision 1.19.2.17
diff -u -3 -p -r1.19.2.17 FSDirectory.cs
--- Store/FSDirectory.cs	30 Sep 2006 01:54:32 -0000	1.19.2.17
+++ Store/FSDirectory.cs	30 Sep 2006 02:47:17 -0000
@@ -172,7 +172,7 @@ namespace Lucene.Net.Store
 			
 			public override System.String ToString()
 			{
-				return "Lock@" + lockFile;
+				return lockFile.FullName;
 			}
 		}
 		

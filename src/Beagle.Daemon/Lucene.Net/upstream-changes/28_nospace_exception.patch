From D Bera <dbera.web@gmail.com>

Throw NoSpaceException instead of silently failing if we can't write due to lack of space. Users of this code should really catch NoSpaceException and act accordingly; there is no point in e.g. retrying to obtain a lockfile if there is no space on the disk!
Also, if for some other reason the writing of the pid failed, the lockfile will be empty. Instead of just printing "-- pid  --", print " -- pid (empty) --" to make it easier to diagnose.

Index: Store/FSDirectory.cs
===================================================================
--- Store/FSDirectory.cs	(revision 4083)
+++ Store/FSDirectory.cs	(working copy)
@@ -82,11 +82,14 @@
 				Mono.Unix.Native.OpenFlags.O_CREAT |
 				Mono.Unix.Native.OpenFlags.O_EXCL,
 				Mono.Unix.Native.FilePermissions.S_IRUSR);
-		    if (fd == -1)
-			    throw new System.IO.IOException ("Could not create lock file: "
-				    + Mono.Unix.Native.Stdlib.strerror (
-					    Mono.Unix.Native.Stdlib.GetLastError ()
-				    ));
+		    if (fd == -1) {
+			    Mono.Unix.Native.Errno error = Mono.Unix.Native.Stdlib.GetLastError ();
+			    if (error == Mono.Unix.Native.Errno.ENOSPC)
+				    throw new Beagle.Util.NoSpaceException ();
+			    else
+				    throw new System.IO.IOException ("Could not create lock file: "
+					    + Mono.Unix.Native.Stdlib.strerror (error));
+		    }
 
 		    // This code replaces the commented-out code below because
 		    // it ends up being much faster.  The reason for this is
@@ -108,7 +111,13 @@
 			    do {
 				    ret = Mono.Unix.Native.Syscall.write (fd, ptr, (ulong) s.Length);
 			    } while (Mono.Unix.UnixMarshal.ShouldRetrySyscall ((int) ret));
-			    Mono.Unix.UnixMarshal.ThrowExceptionForLastErrorIf ((int) ret);
+			    if ((int)ret == -1) {
+				    Mono.Unix.Native.Errno error = Mono.Unix.Native.Stdlib.GetLastError ();
+				    if (error == Mono.Unix.Native.Errno.ENOSPC)
+					    throw new Beagle.Util.NoSpaceException ();
+				    else
+					    Mono.Unix.UnixMarshal.ThrowExceptionForError (error);
+			    }
 		    } finally {
 			    Mono.Unix.UnixMarshal.FreeHeap (ptr);
 
@@ -123,6 +132,10 @@
 		    //w.Close ();
                     return true;
                 }
+		catch (Beagle.Util.NoSpaceException e)
+		{
+			throw e;
+		}
                 catch (Exception e)
                 {
 		    Log ("Exception in CreateNew for file:" + lockFile.FullName + ":" + e);
Index: Store/Lock.cs
===================================================================
--- Store/Lock.cs	(revision 4083)
+++ Store/Lock.cs	(working copy)
@@ -81,7 +81,9 @@
 						fs.Close ();
 						ex.Append (" -- pid ").Append (pid);
 
-						if (System.IO.Directory.Exists ("/proc/" + pid))
+						if (pid == String.Empty)
+							ex.Append ("(empty)");
+						else if (System.IO.Directory.Exists ("/proc/" + pid))
 							ex.Append (" -- process exists");
 						else
 							ex.Append (" -- process does not exist, stale lockfile?");

From: Debajyoti Bera <dbera.web@gmail.com>

Extract Iptc header from Jpeg files. There could be (and should be) a better way
to do this using some Semweb sink.

Index: IptcFile.cs
===================================================================
--- IptcFile.cs	(revision 3203)
+++ IptcFile.cs	(working copy)
@@ -376,6 +376,9 @@
 	public class IptcFile : SemWeb.StatementSource
 	{
 		System.Collections.ArrayList sets = new System.Collections.ArrayList ();
+		public System.Collections.ArrayList Sets {
+			get { return sets; }
+		}
 
                 // False seems a safe default
                 public bool Distinct {
@@ -441,8 +444,8 @@
 					//System.Console.WriteLine (e.ToString ());
 				}
 				//DataSetInfo info = DataSetInfo.FindInfo (data.ID);
-				System.Console.WriteLine ("{0}:{1} - {2} {3}", data.RecordNumber, data.DataSetNumber, 
-							  data.ID.ToString (), "hoo");
+				//System.Console.WriteLine ("{0}:{1} - {2} {3}", data.RecordNumber, data.DataSetNumber, 
+				//			  data.ID.ToString (), info.Description);
 				sets.Add (data);
 			}
 		}
Index: JpegHeader.cs
===================================================================
--- JpegHeader.cs	(revision 3203)
+++ JpegHeader.cs	(working copy)
@@ -3,6 +3,7 @@
  *     Larry Ewing <lewing@novell.com>
  *
  * Copyright (c) 2006 Novell Inc. 
+ * Copyright (c) 2007 Debajyoti Bera <dbera.web@gmail.com>
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU General Public License as
@@ -378,6 +379,26 @@
 		}
 	}
 
+	public Iptc.IptcFile GetIptc ()
+	{
+		string name = PhotoshopSignature.Name;
+		JpegHeader.Marker marker = FindMarker (PhotoshopSignature);
+		if (marker != null) {
+			int len = name.Length;
+			using (System.IO.Stream bimstream = new System.IO.MemoryStream (marker.Data, len,
+											marker.Data.Length - len, false)) {
+
+				Bim.BimFile bim = new Bim.BimFile (bimstream);
+				// FIXME: What about EntryType.XMP ?
+				Bim.Entry iptc_entry = bim.FindEntry (Bim.EntryType.IPTCNAA);
+				System.IO.Stream iptcstream = new System.IO.MemoryStream (iptc_entry.Data);
+				Iptc.IptcFile iptc = new Iptc.IptcFile (iptcstream);
+				return iptc;
+			}
+		}
+		return null;
+	}
+
 	public Exif.ExifData Exif {
 		get {
 			Marker m = FindMarker (ExifSignature);
Index: Tiff.cs
===================================================================
--- Tiff.cs	(revision 3203)
+++ Tiff.cs	(working copy)
@@ -890,9 +890,9 @@
 		public void SelectDirectory (ImageDirectory dir, StatementSink sink)
 		{
 			foreach (DirectoryEntry e in dir.Entries) {
-//#if DEBUG_LOADER
-				System.Console.WriteLine ("=> {0}", e.Id);
-//#endif
+#if DEBUG_LOADER
+				System.Console.WriteLine ("{0}", e.Id);
+#endif
 				switch (e.Id) {
 				case TagId.IPTCNAA:
 					System.IO.Stream iptcstream = new System.IO.MemoryStream (e.RawData);
